"""Initial Migration

Revision ID: 6e3ddbb600f0
Revises: 
Create Date: 2025-07-04 22:23:39.808624

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
# noinspection PyCompatibility
revision: str = '6e3ddbb600f0'
# noinspection PyCompatibility
down_revision: Union[str, Sequence[str], None] = None
# noinspection PyCompatibility
branch_labels: Union[str, Sequence[str], None] = None
# noinspection PyCompatibility
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('song',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('artist', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('album', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('username', sa.String(length=50), nullable=False),
        sa.Column('email', sa.String(length=120), nullable=False),
        sa.Column('password', sa.String(length=120), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_password'), 'user', ['password'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)

    op.create_table('playlist',
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_playlist_name'), 'playlist', ['name'], unique=True)
    op.create_index(op.f('ix_playlist_user_id'), 'playlist', ['user_id'], unique=False)

    op.create_table('playlistsonglink',
        sa.Column('playlist_id', sa.Integer(), nullable=False),
        sa.Column('song.id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['playlist_id'], ['playlist.id'], ),
        sa.ForeignKeyConstraint(['song.id'], ['song.id'], ),
        sa.PrimaryKeyConstraint('playlist_id', 'song.id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('playlistsonglink')
    op.drop_index(op.f('ix_playlist_user_id'), table_name='playlist')
    op.drop_index(op.f('ix_playlist_name'), table_name='playlist')
    op.drop_table('playlist')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_password'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('song')
    # ### end Alembic commands ###
